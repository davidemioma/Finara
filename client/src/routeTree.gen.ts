/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthSignUpImport } from './routes/auth/sign-up'
import { Route as AuthSignInImport } from './routes/auth/sign-in'
import { Route as AuthResetImport } from './routes/auth/reset'
import { Route as AuthNewVerificationImport } from './routes/auth/new-verification'
import { Route as AuthNewPasswordImport } from './routes/auth/new-password'
import { Route as AuthNewEmailImport } from './routes/auth/new-email'
import { Route as AuthenticatedTransactionHistoryImport } from './routes/_authenticated/transaction-history'
import { Route as AuthenticatedSettingsImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedPaymentTransferImport } from './routes/_authenticated/payment-transfer'
import { Route as AuthenticatedMyBanksImport } from './routes/_authenticated/my-banks'

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  path: '/auth/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetRoute = AuthResetImport.update({
  path: '/auth/reset',
  getParentRoute: () => rootRoute,
} as any)

const AuthNewVerificationRoute = AuthNewVerificationImport.update({
  path: '/auth/new-verification',
  getParentRoute: () => rootRoute,
} as any)

const AuthNewPasswordRoute = AuthNewPasswordImport.update({
  path: '/auth/new-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthNewEmailRoute = AuthNewEmailImport.update({
  path: '/auth/new-email',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedTransactionHistoryRoute =
  AuthenticatedTransactionHistoryImport.update({
    path: '/transaction-history',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSettingsRoute = AuthenticatedSettingsImport.update({
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedPaymentTransferRoute =
  AuthenticatedPaymentTransferImport.update({
    path: '/payment-transfer',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedMyBanksRoute = AuthenticatedMyBanksImport.update({
  path: '/my-banks',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/my-banks': {
      id: '/_authenticated/my-banks'
      path: '/my-banks'
      fullPath: '/my-banks'
      preLoaderRoute: typeof AuthenticatedMyBanksImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/payment-transfer': {
      id: '/_authenticated/payment-transfer'
      path: '/payment-transfer'
      fullPath: '/payment-transfer'
      preLoaderRoute: typeof AuthenticatedPaymentTransferImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/transaction-history': {
      id: '/_authenticated/transaction-history'
      path: '/transaction-history'
      fullPath: '/transaction-history'
      preLoaderRoute: typeof AuthenticatedTransactionHistoryImport
      parentRoute: typeof AuthenticatedImport
    }
    '/auth/new-email': {
      id: '/auth/new-email'
      path: '/auth/new-email'
      fullPath: '/auth/new-email'
      preLoaderRoute: typeof AuthNewEmailImport
      parentRoute: typeof rootRoute
    }
    '/auth/new-password': {
      id: '/auth/new-password'
      path: '/auth/new-password'
      fullPath: '/auth/new-password'
      preLoaderRoute: typeof AuthNewPasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/new-verification': {
      id: '/auth/new-verification'
      path: '/auth/new-verification'
      fullPath: '/auth/new-verification'
      preLoaderRoute: typeof AuthNewVerificationImport
      parentRoute: typeof rootRoute
    }
    '/auth/reset': {
      id: '/auth/reset'
      path: '/auth/reset'
      fullPath: '/auth/reset'
      preLoaderRoute: typeof AuthResetImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedMyBanksRoute,
    AuthenticatedPaymentTransferRoute,
    AuthenticatedSettingsRoute,
    AuthenticatedTransactionHistoryRoute,
    AuthenticatedIndexRoute,
  }),
  AuthNewEmailRoute,
  AuthNewPasswordRoute,
  AuthNewVerificationRoute,
  AuthResetRoute,
  AuthSignInRoute,
  AuthSignUpRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/auth/new-email",
        "/auth/new-password",
        "/auth/new-verification",
        "/auth/reset",
        "/auth/sign-in",
        "/auth/sign-up"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/my-banks",
        "/_authenticated/payment-transfer",
        "/_authenticated/settings",
        "/_authenticated/transaction-history",
        "/_authenticated/"
      ]
    },
    "/_authenticated/my-banks": {
      "filePath": "_authenticated/my-banks.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/payment-transfer": {
      "filePath": "_authenticated/payment-transfer.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/transaction-history": {
      "filePath": "_authenticated/transaction-history.tsx",
      "parent": "/_authenticated"
    },
    "/auth/new-email": {
      "filePath": "auth/new-email.tsx"
    },
    "/auth/new-password": {
      "filePath": "auth/new-password.tsx"
    },
    "/auth/new-verification": {
      "filePath": "auth/new-verification.tsx"
    },
    "/auth/reset": {
      "filePath": "auth/reset.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx"
    },
    "/auth/sign-up": {
      "filePath": "auth/sign-up.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
